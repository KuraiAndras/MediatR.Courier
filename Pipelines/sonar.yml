trigger:
- '*'

pool:
  vmImage: 'windows-latest'
  demands: java

variables:
  buildConfiguration: "Release"

steps:

- task: SonarQubePrepare@4
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'SonarCloudCourier'
    organization: kuraiandras-devops
    projectKey: 'MediatR.Courier'
    projectName: 'MediatR.Courier'
    extraProperties: |
      projectBaseDir=$(Build.SourcesDirectory)
      sonar.exclusions=**/obj/**,**/*.dll,**/*.js,**/*.ts
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
      sonar.verbose=true

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build'

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: test
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
    nobuild: true

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator "-reports:$(Build.SourcesDirectory)/**/coverage.opencover.xml" "-targetdir:$(Build.SourcesDirectory)/CodeCoverage" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
  displayName: Create Code Coverage Report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- task: SonarQubeAnalyze@4
  displayName: 'Run Code Analysis'
  continueOnError: false

- task: SonarQubePublish@4
  displayName: 'Publish Quality Gate Result'
  continueOnError: false